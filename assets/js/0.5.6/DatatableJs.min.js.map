{"version":3,"sources":["DatatableJs.min.js"],"names":["global","undefined","ENV","log_levels","log_level","indexOf","console","assert","count","dir","error","group","groupCollapsed","groupEnd","info","log","time","timeEnd","trace","warn","console_levels","getLogLevel","Number","setLogLevel","DatatableJs","lib","Exception","buildLogger","a","hasOwnProperty","this","apply","arguments","args","_data","_schema","init","Column","Schema","Data","Iterator","prototype","_is_shadow","schema","setSchema","data","setData","clone","data_copy","JSON","parse","stringify","getRows","getSchema","isShadow","getData","Array","rows","setRows","addRow","row","getRow","options","iterator","createIterator","addFilterRule","fields","comparators","values","next","splice","execute","remove","indexRows","bool","ret_val","Boolean","message","fileName","lineNumber","Error","constructor","name","columns","_columns","setColumns","getColumns","column_name","getColumn","deleteColumn","setColumn","column_definition","isValidRow","column","isValidData","getDefinition","col","value","getType","toString","call","replace","split","isNaN","get","_column_definition","setDefinition","field","set","property","_current_sort_column","_current_sort_direction","_rows","truncate","row_key","length","Object","keys","is_valid_row","__pos__","defineProperty","val","push","current_data","sort","direction","comparator","transformer","reverse_direction","reverse","b","a_val","b_val","_PAGINATION_DEFAULTS","enabled","rows_per_page","current_page","datatable_instance","shadow_instance","shadow_index","_cur_value","_filters","_is_executed","_is_filtered","_is_sorted","_iterator_key","_iterator_value","_pagination","_sorts","applyFilterRules","filter","clearFilterRules","setFilterRules","filter_rules","getFilterRules","addSortRule","clearSortRules","getSortRules","setSortRules","sort_rules","setPaginationRule","pagination","Math","round","getPage","setPage","page","getRowsPerPage","setRowsPerPage","getPaginationEnabled","setPaginationEnabled","getMinRow","applySortRules","rowMatches","min_page_row","getMaxRow","max_page_row","curr","prev","filter_matches","field_name","_compare","reset","where","and","orderBy","as","filename","separator","cell_data","file_blob","file_url","file_link","mime_type","self","data_rows","file_data","String","toLowerCase","join","Blob","type","window","URL","createObjectURL","document","createElement","href","setAttribute","body","appendChild","click","removeChild"],"mappings":"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","file":"DatatableJs.min.js","sourcesContent":["\n+function(global, undefined) {\n\t'use strict';\n\n\t/**\n\t * Privately scoped environment data\n\t *\n\t * @private\n\t */\n\tvar ENV = {};\n\n\t/**\n\t * Define log levels\n\t *\n\t * @type {Array}\n\t */\n\tENV.log_levels = [\n\t\t'trace'   // 0\n\t\t, 'debug' // 1\n\t\t, 'info'  // 2\n\t\t, 'warn'  // 3\n\t\t, 'error' // 4\n\t\t, 'off'   // 5\n\t];\n\n\t/**\n\t * Store the current log level\n\t *\n\t * @type {Number}\n\t */\n\tENV.log_level = ENV.log_levels.indexOf('info');\n\n\t/**\n\t * This library uses console messages to provide non-fatal error feedback,\n\t * make sure those methods exist in all environments.\n\t *\n\t * @type {Console}\n\t */\n\tENV.console = global.console;\n\tif (!ENV.console)                {ENV.console = {};}\n\tif (!ENV.console.assert)         {ENV.console.assert         = function() {};}\n\tif (!ENV.console.count)          {ENV.console.count          = function() {};}\n\tif (!ENV.console.dir)            {ENV.console.dir            = function() {};}\n\tif (!ENV.console.error)          {ENV.console.error          = function() {};}\n\tif (!ENV.console.group)          {ENV.console.group          = function() {};}\n\tif (!ENV.console.groupCollapsed) {ENV.console.groupCollapsed = function() {};}\n\tif (!ENV.console.groupEnd)       {ENV.console.groupEnd       = function() {};}\n\tif (!ENV.console.info)           {ENV.console.info           = function() {};}\n\tif (!ENV.console.log)            {ENV.console.log            = function() {};}\n\tif (!ENV.console.time)           {ENV.console.time           = function() {};}\n\tif (!ENV.console.timeEnd)        {ENV.console.timeEnd        = function() {};}\n\tif (!ENV.console.trace)          {ENV.console.trace          = function() {};}\n\tif (!ENV.console.warn)           {ENV.console.warn           = function() {};}\n\n\t/**\n\t * Map of console methods to log level values\n\t *\n\t * @type {Object}\n\t */\n\tENV.console_levels = {};\n\tENV.console_levels.assert         = 0;\n\tENV.console_levels.count          = 0;\n\tENV.console_levels.dir            = 0;\n\tENV.console_levels.error          = 4;\n\tENV.console_levels.group          = 2;\n\tENV.console_levels.groupCollapsed = 2;\n\tENV.console_levels.groupEnd       = 2;\n\tENV.console_levels.info           = 2;\n\tENV.console_levels.log            = 1;\n\tENV.console_levels.time           = 1;\n\tENV.console_levels.timeEnd        = 1;\n\tENV.console_levels.trace          = 0;\n\tENV.console_levels.warn           = 3;\n\n\t/**\n\t * Get the logging level\n\t *\n\t * Default to 'info'\n\t *\n\t * @return {Number}\n\t */\n\tENV.getLogLevel = function() {\n\t\tif (undefined === ENV.log_levels[Number(ENV.log_level)]) {\n\t\t\tENV.setLogLevel('info');\n\t\t}\n\t\treturn ENV.log_levels[ENV.log_level];\n\t};\n\n\t/**\n\t * Set the current DatatableJs.lib.Data instance\n\t *\n\t * @param  {String}      log_level\n\t * @return {DatatableJs}\n\t */\n\tENV.setLogLevel = function(log_level) {\n\t\tif (-1 === ENV.log_levels.indexOf(log_level))   {\n\t\t\tthrow new DatatableJs.lib.Exception('Invalid log level: '+log_level);\n\t\t}\n\t\tENV.log_level = ENV.log_levels.indexOf(log_level);\n\t\tENV.buildLogger();\n\t};\n\n\t/**\n\t * Setup the logger\n\t *\n\t * @return {[type]} [description]\n\t */\n\tENV.buildLogger = function() {\n\t\tglobal.DatatableJs.console = {};\n\t\tfor (var a in ENV.console_levels) if (ENV.console_levels.hasOwnProperty(a)) {\n\t\t\t/*jshint loopfunc:true */\n\t\t\tif (ENV.console_levels[a] >= ENV.log_levels.indexOf(this.getLogLevel())) {\n\t\t\t\tglobal.DatatableJs.console[a] = function() {\n\t\t\t\t\treturn ENV.console[a].apply(ENV.console, arguments);\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tglobal.DatatableJs.console[a] = function() {};\n\t\t\t}\n\t\t\t/*jshint loopfunc:false */\n\t\t}\n\t\treturn global.DatatableJs.console;\n\t};\n\n\t/**\n\t * DatatableJs constructor\n\t *\n\t * @param {Array} schema Optional, an array of column definitions\n\t * @param {Array} data   Optional, an array of data row objects\n\t */\n\tvar DatatableJs = function(args) {\n\n\t\t/**\n\t\t * @private\n\t\t * @type {DatatableJs.lib.Data}\n\t\t */\n\t\tthis._data = undefined;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {DatatableJs.lib.Schema}\n\t\t */\n\t\tthis._schema = undefined;\n\n\t\tthis.init(args);\n\t};\n\n\t/**\n\t * Store class references so they can be created and validated on demand\n\t *\n\t * @type {Object}\n\t */\n\tDatatableJs.lib = {\n\t\t  Column:    undefined\n\t\t, Schema:    undefined\n\t\t, Data:      undefined\n\t\t, Iterator:    undefined\n\t\t, Exception: undefined\n\t};\n\tDatatableJs.prototype.lib = DatatableJs.lib;\n\n\t/**\n\t * Default value for the is_shaow flag\n\t * @type {Boolean}\n\t */\n\tDatatableJs.prototype._is_shadow = false;\n\n\t/**\n\t * Initialize\n\t *\n\t * @param  {DatatableJs.lib.Schema}     schema Optional\n\t * @param  {DatatableJs.lib.Data|Array} data   Optional\n\t * @return {DatatableJs}\n\t */\n\tDatatableJs.prototype.init = function(args) {\n\t\t// Store\n\t\tif (args) {\n\t\t\tif (undefined !== args.schema)    {this.setSchema(args.schema);}\n\t\t\tif (undefined !== args.data)      {this.setData(args.data);}\n\t\t\tif (undefined !== args.log_level) {this.setLogLevel(args.log_level);}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Deep-copy the current instance and return the result.  Do this when you\n\t * need to avoid conflicts when sharing a dataset among multiple independent\n\t * processes.\n\t *\n\t * @return {DatatableJs}\n\t */\n\tDatatableJs.prototype.clone = function() {\n\t\tvar data_copy = global.JSON.parse(global.JSON.stringify(this.getRows()));\n\t\treturn new DatatableJs({\n\t\t\t  data: data_copy\n\t\t\t, schema: this.getSchema()\n\t\t}).isShadow(this.isShadow());\n\t};\n\n\t/**\n\t * Get the current DatatableJs.lib.Data instance\n\t *\n\t * If an instance doesn't exist or is invalid one will be created\n\t *\n\t * @return {DatatableJs.lib.Data}\n\t */\n\tDatatableJs.prototype.getData = function() {\n\t\tif (!(this._data instanceof this.lib.Data)) {\n\t\t\tthis._data = new this.lib.Data();\n\t\t\tthis._data.setSchema(this.getSchema());\n\t\t\tthis._data.isShadow(this.isShadow());\n\t\t}\n\t\treturn this._data;\n\t};\n\n\t/**\n\t * Set the current DatatableJs.lib.Data instance\n\t *\n\t * @param  {DatatableJs.lib.Data} data\n\t * @return {DatatableJs}\n\t */\n\tDatatableJs.prototype.setData = function(data) {\n\t\tif (undefined !== data)   {\n\t\t\t// Accept an array of data rows for convenience\n\t\t\tif ((data instanceof Array)) {\n\t\t\t\tvar rows = data;\n\t\t\t\tdata = new this.lib.Data();\n\t\t\t\tdata.setSchema(this.getSchema());\n\t\t\t\tdata.setRows(rows);\n\t\t\t\tdata.isShadow(this.isShadow());\n\t\t\t} else if (!(data instanceof DatatableJs.lib.Data)) {\n\t\t\t\tthrow new DatatableJs.lib.Exception('The data definition must be an array of data rows or an instance of DatatableJs.lib.Data');\n\t\t\t}\n\t\t\tthis._data = data;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the logging level\n\t *\n\t * Default to 'info'\n\t *\n\t * @return {Number}\n\t */\n\tDatatableJs.prototype.getLogLevel = function() {\n\t\treturn ENV.getLogLevel();\n\t};\n\n\t/**\n\t * Set the current DatatableJs.lib.Data instance\n\t *\n\t * @param  {String}      log_level\n\t * @return {DatatableJs}\n\t */\n\tDatatableJs.prototype.setLogLevel = function(log_level) {\n\t\tENV.setLogLevel(log_level);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a row to the current set\n\t *\n\t * @param {Array}\n\t */\n\tDatatableJs.prototype.addRow = function(row) {\n\t\treturn this.getData().addRow(row);\n\t};\n\n\t/**\n\t * Get the current set of data rows\n\t *\n\t * @return {Array}\n\t */\n\tDatatableJs.prototype.getRows = function() {\n\t\treturn this.getData().getRows();\n\t};\n\n\t/**\n\t * Get a single (the first) data row that matches field values passed in options\n\t *\n\t * This is just a very simple iterator wrapper.\n\t *\n\t * @param  {Object} options Key => Value pairs\n\t * @return {Array}\n\t */\n\tDatatableJs.prototype.getRow = function(options) {\n\t\tvar iterator = this.createIterator();\n\t\tfor (var a in options) if (options.hasOwnProperty(a)) {\n            if (options[a]) {\n                iterator.addFilterRule({\n                    fields: a\n                    , comparators: '=='\n                    , values: options[a]\n                });\n            }\n\t\t}\n\t\treturn iterator.next();\n\t};\n\n\t/**\n\t * Replace the current data set with an array of data rows\n\t *\n\t * @param  {Array} rows\n\t * @return {DatatableJs}\n\t */\n\tDatatableJs.prototype.setRows = function(rows) {\n\t\tif (!(rows instanceof Array)) {throw new DatatableJs.lib.Exception('The data definition must be an array of data rows');}\n\t\tthis.getData().setRows(rows);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the current DatatableJs.lib.Schema instance\n\t *\n\t * If an instance doesn't exist or is invalid one will be created\n\t *\n\t * @return {DatatableJs.lib.Schema}\n\t */\n\tDatatableJs.prototype.getSchema = function() {\n\t\tif (!(this._schema instanceof this.lib.Schema)) {\n\t\t\tthis._schema = new this.lib.Schema();\n\t\t}\n\t\treturn this._schema;\n\t};\n\n\t/**\n\t * Set the current DatatableJs.lib.Schema instance\n\t *\n\t * @param  {DatatableJs.lib.Schema} schema\n\t * @return {DatatableJs}\n\t */\n\tDatatableJs.prototype.setSchema = function(schema) {\n\t\tif (undefined !== schema) {\n\t\t\tif (\n\t\t\t\t'object' === typeof schema\n\t\t\t\t&& !(schema instanceof DatatableJs.lib.Schema)\n\t\t\t) {\n\t\t\t\tschema = new this.lib.Schema(schema);\n\t\t\t}\n\t\t\tthis._schema = schema;\n\n\t\t\t// re-evaluate rows\n\t\t\tif ((this._data instanceof DatatableJs.lib.Data)) {\n\t\t\t\tthis._data.setSchema(schema);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Generate an iterator instance linked to the current schema and data references\n\t *\n\t * @return {DatatableJs.lib.Iterator}\n\t */\n\tDatatableJs.prototype.createIterator = function() {\n\t\treturn new this.lib.Iterator(this);\n\t};\n\n\t/**\n\t * Remove data rows based on an iterator definition\n\t *\n\t * @param  {DatatableJs.lib.Iterator} iterator\n\t * @return {DatatableJs}\n\t */\n\tDatatableJs.prototype.splice = function(iterator) {\n\t\tif (!(iterator instanceof this.lib.Iterator)) {throw new DatatableJs.lib.Exception('Splicing the data requires an Iterator for filtering');}\n\t\titerator.execute();\n\t\twhile (iterator.next()) {\n\t\t\titerator.remove();\n\t\t}\n\t\tthis.getData().indexRows();\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get/Set a flag noting whether this is a shadow instance\n\t *\n\t * @param\n\t * @return {DatatableJs.lib.Iterator}\n\t */\n\tDatatableJs.prototype.isShadow = function(bool) {\n\t\tvar ret_val;\n\t\tif ('undefined' !== typeof bool) {\n\t\t\tthis._is_shadow = Boolean(bool);\n\t\t\tif (this._data instanceof this.lib.Data) {\n\t\t\t\tthis._data.isShadow(this._is_shadow);\n\t\t\t}\n\t\t\tret_val = this;\n\t\t} else {\n\t\t\tret_val = this._is_shadow;\n\t\t}\n\t\treturn ret_val;\n\t};\n\n\tglobal.DatatableJs = DatatableJs;\n\tENV.buildLogger();\n\n}(this);\n\n\n/**\n * Exception class for the DatatableJs library\n * Just extends Error\n */\n+function(global, undefined) {\n    'use strict';\n\n    /**\n     * Exception constructor\n     *\n     * Defined as \"DatatableJs.Exception\"\n     *\n     * @param {String} message    Optional. Human-readable description of the error.\n     * @param {String} fileName   Optional. The value for the fileName property on the created Error\n     *                            object. Defaults to the name of the file containing the code that\n     *                            called the Error() constructor.\n     * @param {Number} lineNumber Optional. The value for the lineNumber property on the created Error\n     *                            object. Defaults to the line number containing the Error() constructor\n     *                            invocation.\n     */\n    var Exception = function(message, fileName, lineNumber) {\n        this.message = message;\n        this.fileName = fileName;\n        this.lineNumber = lineNumber;\n    };\n\n    Exception.prototype = Error.prototype;\n    Exception.prototype.constructor = Exception;\n    Exception.prototype.name = 'DatatableJs.Exception';\n\n    global.DatatableJs.lib.Exception = Exception;\n\n}(this);\n\n\n+function(global, undefined) {\n\t'use strict';\n\n\t/**\n\t * Schema constructor\n\t *\n\t * @param {Object} columns Optional, an object containing named DatatableJs.lib.Column instances\n\t */\n\tvar Schema = function(columns) {\n\n\t\t/**\n\t\t * An object containing named DatatableJs.lib.Column instances\n\t\t * @private\n\t\t * @type {Object}\n\t\t */\n\t\tthis._columns = {};\n\n\t\tthis.init(columns);\n\t};\n\n\t/**\n\t * Initialize\n\t * @param  {Object} columns Optional, an object containing named DatatableJs.lib.Column instances\n\t * @return {DatatableJs.lib.Schema}\n\t */\n\tSchema.prototype.init = function(columns) {\n\t\tif (columns) {\n\t\t\tthis.setColumns(columns);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get current column definitions\n\t *\n\t * @return {Object}\n\t */\n\tSchema.prototype.getColumns = function() {\n\t\treturn this._columns;\n\t};\n\n\t/**\n\t * Set or extend current column definitions\n\t *\n\t * This does not replace the current column definitions, it only extends and\n\t * updates\n\t *\n\t * @param  {Array} columns An array of column definition objects\n\t * @return {DatatableJs.lib.Schema}\n\t */\n\tSchema.prototype.setColumns = function(columns) {\n\t\tif ('object' !== typeof columns) {\n\t\t\tthrow new global.DatatableJs.lib.Exception('The schema definition must be passed as simple object');\n\t\t}\n\n\t\tthis._columns = {};\n\n\t\tfor (var column_name in columns) {if (columns.hasOwnProperty(column_name)) {\n\t\t\tif (!(columns[column_name] instanceof global.DatatableJs.lib.Column)) {\n\t\t\t\tthis._columns[column_name] = new global.DatatableJs.lib.Column(columns[column_name]);\n\t\t\t} else {\n\t\t\t\tthis._columns[column_name] = columns[column_name];\n\t\t\t}\n\t\t}}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get a column definition by name\n\t *\n\t * @param  {String} column_name\n\t * @return {Object|undefined} The schema definition for the specified column, else undefined\n\t */\n\tSchema.prototype.getColumn = function(column_name) {\n\t\tif (undefined !== this._columns[column_name] && !(this._columns[column_name] instanceof global.DatatableJs.lib.Column)) {throw new global.DatatableJs.lib.Exception('The column \"'+column_name+'\" has an invalid definition');}\n\t\treturn this._columns[column_name];\n\t};\n\n\t/**\n\t * Delete a column definition by name\n\t *\n\t * @param  {String} column_name\n\t * @return {DatatableJs.lib.Schema}\n\t */\n\tSchema.prototype.deleteColumn = function(column_name) {\n\t\tif (undefined !== this._columns[column_name]) {\n\t\t\tdelete this._columns[column_name];\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Update or add a named column definition\n\t *\n\t * @param {String} column_name\n\t * @param {Object} column_definition\n\t * @return {DatatableJs.lib.Schema}\n\t */\n\tSchema.prototype.setColumn = function(column_name, column_definition) {\n\n\t\t// Validate\n\t\tif (!column_name)                    {throw new global.DatatableJs.lib.Exception('Invalid column name: \"'+column_name+'\"');}\n\t\tif ('string' !== typeof column_name) {throw new global.DatatableJs.lib.Exception('The column name must be a string');}\n\t\tif (!(column_definition instanceof global.DatatableJs.lib.Column)) {\n\t\t\tcolumn_definition = new global.DatatableJs.lib.Column(column_definition);\n\t\t}\n\n\t\t// Store\n\t\tthis._columns[column_name] = column_definition;\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Test a row of data to see if it meets requirements for this schema definition\n\t *\n\t * @param  {Object}  row A data row\n\t * @return {Boolean}\n\t */\n\tSchema.prototype.isValidRow = function(row) {\n\t\tvar ret_val = true;\n\t\tvar columns = this.getColumns();\n\n\t\tfor (var column in columns) {if (columns.hasOwnProperty(column)) {\n\t\t\tret_val = this.isValidData(column, row[column]);\n\t\t\tif (!ret_val) {\n\t\t\t\tglobal.DatatableJs.console.error('DatatableJs.lib.Schema: \"'+column+'\" value is invalid', row[column], columns[column].getDefinition());\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}}\n\n\t\treturn ret_val;\n\t};\n\n\t/**\n\t * Test an individual piece of data to see if meets requirements for a specified\n\t * column\n\t *\n\t * @param  {String}  column\n\t * @param  {mixed}   value\n\t * @return {Boolean}\n\t */\n\tSchema.prototype.isValidData = function(col, value) {\n\n\t\t/**\n\t\t * Get a variable's data type\n\t\t *\n\t\t * javscript type checking is stupid...\n\t\t *\n\t\t *     1 instanceof Number             === false\n\t\t *     Number(1) instanceof Number     === false\n\t\t *     new Number(1) instanceof Number === true\n\t\t *     NaN instanceof Number           === false\n\t\t *     null instanceof Object          === false\n\t\t *     typeof 1                        === \"number\"\n\t\t *     typeof Number                   === \"function\"\n\t\t *     typeof Number(1)                === \"number\"\n\t\t *     typeof new Number(1)            === \"object\"\n\t\t *     typeof NaN                      === \"number\"\n\t\t *     typeof null                     === \"object\"\n\t\t *\n\t\t * This function will return a string name of the native type or 'Object'\n\t\t * for custom object instances\n\t\t *\n\t\t * @param  {mixed}  value The value to check\n\t\t * @return {String}       The native type name as a string ala typeof()\n\t\t *                        but accurate for native values and instances:\n\t\t *\n\t\t *                            getType(1)             === \"Number\"\n\t\t *                            getType(Number(1))     === \"Number\"\n\t\t *                            getType(new Number(1)) === \"Number\"\n\t\t *                            getType(Number)        === \"Function\" - use instanceof in this case\n\t\t *                            getType(NaN)           === \"NaN\"\n\t\t *                            getType()              === \"Undefined\"\n\t\t *                            getType(null)          === \"Null\"\n\t\t */\n\t\tvar getType = function(value) {\n\t\t\tvar ret_val = '';\n\t\t\tif (null === value) {\n\t\t\t\tret_val = 'Null';\n\t\t\t} else {\n\t\t\t\tret_val = {}.toString.call(value).replace(/[\\[\\]]/g, '').split(' ')[1];\n\t\t\t}\n\t\t\tif ('Number' === ret_val && isNaN(value)) {\n\t\t\t\tret_val = 'NaN';\n\t\t\t}\n\t\t\treturn ret_val;\n\t\t};\n\n\t\tvar ret_val = true;\n\t\tvar column = this.getColumn(col);\n\n\t\t// Null data check\n\t\tif (\n\t\t\tfalse === column.get('nullable')\n\t\t\t&& (\n\t\t\t\t'undefined' === typeof value\n\t\t\t\t|| null === value\n\t\t\t\t|| '' === value\n\t\t\t)\n\t\t) {\n\t\t\tret_val = false;\n\t\t}\n\n        // Datatype is defined, continue type checking\n        if (\n            ret_val\n            && null !== value\n            && undefined !== value\n            && '' !== value\n            && undefined !== column.get('type')) {\n\n            ret_val = (\n                    // Datatype is specified using a string in the schema\n                    getType(value) === column.get('type')\n                || (\n                    // Datatype is specified as a function reference but the\n                    // actual value is probably a primitive\n                    'Function' === getType(column.get('type'))\n                    && getType(value) === column.get('type').name\n                )\n                || (\n                    // Datatype is specified as a function reference for instance\n                    // checks\n                    'Function' === getType(column.get('type'))\n                    && (value instanceof column.get('type'))\n                )\n            );\n        }\n\n\t\t/*\n\t\t\t//ret_val = (\n\t\t\t//\t\t// Datatype is not defined\n\t\t\t//\t\tundefined === column.get('type')\n\t\t\t//\t||\t(\n\t\t\t//\t\t// Datatype is specified using a string in the schema\n\t\t\t//\t\tgetType(value) === column.get('type')\n\t\t\t//\t)\n\t\t\t//\t|| (\n\t\t\t//\t\t// Null data check\n\t\t\t//\t\tcolumn.get('nullable')\n\t\t\t//\t\t&& ('Undefined' === getType(value))\n\t\t\t//\t)\n\t\t\t//\t|| (\n\t\t\t//\t\t// Datatype is specified as a function reference but the\n\t\t\t//\t\t// actual value is probably a primitive\n\t\t\t//\t\t'Function' === getType(column.get('type'))\n\t\t\t//\t\t&& getType(value) === column.get('type').name\n\t\t\t//\t)\n\t\t\t//\t|| (\n\t\t\t//\t\t// Datatype is specified as a function reference for instance\n\t\t\t//\t\t// checks\n\t\t\t//\t\t'Function' === getType(column.get('type'))\n\t\t\t//\t\t&& (value instanceof column.get('type'))\n\t\t\t//\t)\n\t\t\t//);\n\t\t*/\n\t\treturn ret_val;\n\t};\n\n\tglobal.DatatableJs.lib.Schema = Schema;\n\n}(this);\n\n\n+function(global, undefined) {\n\t'use strict';\n\n\t/**\n\t * Constructor\n\t *\n\t * @param  {Object} column_definition\n\t * @return {DatatableJs.lib.Column}\n\t */\n\tvar Column = function(column_definition) {\n\n\t\t/**\n\t\t * Default column definition\n\t\t *\n\t\t * All fields are optional\n\t\t *\n\t\t * @private\n\t\t * @type {Object}\n\t\t *     type:             String    // A data type.  Any type if undefined\n\t\t *\n\t\t *     nullable:         true      // Whether to allow 'undefined' or omitted values\n\t\t *\n\t\t *     sort_direction:   'asc'     // The default sort direction for this column\n\t\t *\n\t\t *     sort_comparator:  undefined // A custom comparison function taking 3 arguments,\n\t\t *                                 // value a, value b and sort direction (either 'asc' or 'desc')\n\t\t *\n\t\t *     sort_transformer: undefined // A custom data transformation function taking 1 argument\n\t\t *                                 // that transforms value a and value b before the sort\n\t\t *                                 // comparison\n\t\t */\n\t\tthis._column_definition = {};\n\n\t\tthis.init(column_definition);\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Initialize\n\t *\n\t * @param  {Object} column_definition\n\t * @return {DatatableJs.lib.Column}\n\t */\n\tColumn.prototype.init = function(column_definition) {\n\t\treturn this.setDefinition(column_definition);\n\t};\n\n\t/**\n\t * Get a column property\n\t *\n\t * @param  {String} field\n\t * @return {mixed}\n\t */\n\tColumn.prototype.get = function(field) {\n\t\treturn this.getDefinition()[field];\n\t};\n\n\t/**\n\t * Set a column property\n\t *\n\t * @param  {String} field\n\t * @param  {mixed}  value\n\t * @return {DatatableJs.lib.Column}\n\t */\n\tColumn.prototype.set = function(field, value) {\n\t\tthis.getDefinition()[field] = value;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the full definition object for this column\n\t *\n\t * @return {Object}\n\t */\n\tColumn.prototype.getDefinition = function() {\n\t\treturn this._column_definition;\n\t};\n\n\t/**\n\t * Extend the current column definition\n\t *\n\t * @param  {Object} column_definition\n\t * @return {DatatableJs.lib.Column}\n\t */\n\tColumn.prototype.setDefinition = function(column_definition) {\n\n\t\t// Validate\n\t\tif (undefined === column_definition) {column_definition = {};}\n\t\tif ('object' !== typeof column_definition) {throw new global.DatatableJs.lib.Exception('Column definitions must be passed as an object');}\n\n\t\t// Store\n\t\tfor (var property in column_definition) {if (column_definition.hasOwnProperty(property)) {\n\t\t\tthis._column_definition[property] = column_definition[property];\n\t\t}}\n\n\t\treturn this;\n\t};\n\n\tglobal.DatatableJs.lib.Column = Column;\n\n}(this);\n\n\n+function(global, undefined) {\n\t'use strict';\n\n\t/**\n\t * Data constructor\n\t *\n\t * @param {Object} rows Optional, an object containing named DatatableJs.lib.Column instances\n\t */\n\tvar Data = function(rows) {\n\n\t\t/**\n\t\t * The current sort column, if any\n\t\t * @private\n\t\t * @type {String}\n\t\t */\n\t\tthis._current_sort_column    = undefined;\n\n\t\t/**\n\t\t * The current sort direction, if any\n\t\t * @private\n\t\t * @type {String} 'asc' or 'desc'\n\t\t */\n\t\tthis._current_sort_direction = undefined;\n\n\t\t/**\n\t\t * An object containing named DatatableJs.lib.Column instances\n\t\t * @private\n\t\t * @type {Array}\n\t\t */\n\t\tthis._rows = [];\n\n\t\t/**\n\t\t * Local reference to the Schema object\n\t\t * @private\n\t\t * @type {DatatableJs.lib.Schema}\n\t\t */\n\t\tthis._schema = undefined;\n\n\t\tthis.init(rows);\n\t};\n\n\t/**\n\t * Default value for the is_shaow flag\n\t * @type {Boolean}\n\t */\n\tData.prototype._is_shadow = false;\n\n\t/**\n\t * Initialize\n\t *\n\t * @param  {Object} rows Optional, an object containing named DatatableJs.lib.Column instances\n\t * @return {DatatableJs.lib.Data}\n\t */\n\tData.prototype.init = function(rows) {\n\t\tif (undefined !== rows) {\n\t\t\tthis.setRows(rows);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the current set of data rows\n\t *\n\t * @return  {Array}\n\t */\n\tData.prototype.getRows = function() {\n\t\tif (!(this._rows instanceof Array)) {this._rows = [];}\n\t\treturn this._rows;\n\t};\n\n\t/**\n\t * Replace the current data set with an array of data rows\n\t *\n\t * @param  {Array} rows\n\t * @return {DatatableJs.lib.Data}\n\t */\n\tData.prototype.setRows = function(rows) {\n\t\tif (!(rows instanceof Array)) {throw new global.DatatableJs.lib.Exception('Data must be an array objects representing rows');}\n\t\tthis.truncate();\n\t\tthis._current_sort_column    = undefined;\n\t\tthis._current_sort_direction = undefined;\n\n\t\tvar row_key;\n\n\t\tfor (row_key = 0; row_key < rows.length; row_key++) {\n\t\t\tthis.addRow(rows[row_key]);\n\t\t}\n\n\t\tif (0 === row_key)                              {global.DatatableJs.console.info('DatatableJs - No data rows found');}\n\t\tif (0 === this.getRows().length && row_key > 0) {global.DatatableJs.console.info('DatatableJs - No valid data rows found');}\n\t\tif (this.getRows().length < row_key)            {global.DatatableJs.console.info('DatatableJs - '+(row_key - this.getRows().length)+' of '+row_key+' data rows were invalid');}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a row to the current dataset\n\t *\n\t * If a schema is available, validate the row data.  Add support properties\n\t * for the stable sort implementation.\n\t *\n\t * @param  {Object} row\n\t * @return {DatatableJs.lib.Data}\n\t */\n\tData.prototype.addRow = function(row) {\n\t\tif ('object' !== typeof row)       {throw new global.DatatableJs.lib.Exception('Row data must be a simple object');}\n\t\tif (0 === Object.keys(row).length) {global.DatatableJs.console.warn('DatatableJs - An attempt to insert an empty data row rejected');}\n\n\t\tvar is_valid_row = true;\n\t\tif ((this.getSchema() instanceof global.DatatableJs.lib.Schema)) {\n\t\t\tis_valid_row = this.getSchema().isValidRow(row);\n\t\t}\n\n\t\tif (is_valid_row) {\n\n\t\t\t// Create and populate a property to allow row position tracking for\n\t\t\t// use in multi-column sort operations rather than implementing my own\n\t\t\t// stable sort algorithm\n\t\t\tif (!row.hasOwnProperty('__pos__')) {\n\t\t\t\tvar __pos__;\n\t\t\t\tObject.defineProperty(row, '__pos__', {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn __pos__;\n\t\t\t\t\t}\n\t\t\t\t\t, set: function(val) {\n\t\t\t\t\t\t__pos__ = val;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!this.isShadow()) {\n\t\t\t\trow.__pos__ = this._rows.length;\n\t\t\t}\n\n\t\t\tthis._rows.push(row);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the current DatatableJs.lib.Schema instance\n\t *\n\t * If an instance doesn't exist or is invalid one will be created\n\t *\n\t * @return {DatatableJs.lib.Schema}\n\t */\n\tData.prototype.getSchema = function() {\n\t\tif (!(this._schema instanceof global.DatatableJs.lib.Schema)) {\n\t\t\tthis._schema = new global.DatatableJs.lib.Schema();\n\t\t}\n\t\treturn this._schema;\n\t};\n\n\t/**\n\t * Set the current DatatableJs.lib.Schema instance\n\t *\n\t * @param  {DatatableJs.lib.Schema} schema\n\t * @return {DatatableJs.lib.Data}\n\t */\n\tData.prototype.setSchema = function(schema) {\n\t\tif (!(schema instanceof global.DatatableJs.lib.Schema)) {throw new global.DatatableJs.lib.Exception('\"schema\" must be an instance of DatatableJs.lib.Schema');}\n\t\tvar current_data = this.getRows();\n\t\tthis.truncate();\n\t\tthis._schema = schema;\n\t\tif (current_data.length) {\n\t\t\tthis.setRows(current_data); // This will re-validate current rows against the schema\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sort the data.\n\t *\n\t * This implements a stable multi-sort algorithm\n\t *\n\t * @param  {String}          column      The column to sort on\n\t * @param  {String}          direction   Optional, the sort direction, either\n\t *                                       'asc' or 'desc'\n\t * @param  {Function|String} comparator  Optional, a method to use when comparing\n\t *                                       values for sorting\n\t *                                           - function(a, b) {} // A custom comparison function that\n\t *                                                               // compares two values for a match,\n\t *                                                               // return -1, 0 or 1\n\t * @param  {Function}        transformer A function to use to transform values prior to the sort\n\t *                                       comparison (stripping HTML, typecasting, etc.)\n\t * @return {DatatableJs.lib.Data}\n\t */\n\tData.prototype.sort = function(column, direction, comparator, transformer) {\n\n\t\tif (undefined === column) {column = this._current_sort_column;}\n\t\tif ('string' !== typeof column) {throw new global.DatatableJs.lib.Exception('Invalid column value: '+column);}\n\t\tvar reverse_direction = false;\n\n\t\t// If a direction isn't specified and the data is currently sorted by the\n\t\t// requested column assume we're just reversing the order\n\t\tif ('string' !== typeof direction) {\n\t\t\tif (column === this._current_sort_column) {\n\t\t\t\tdirection = ('asc' === this._current_sort_direction\n\t\t\t\t\t? 'desc'\n\t\t\t\t\t: 'asc'\n\t\t\t\t);\n\n\t\t\t\t// Update local metadata\n\t\t\t\tthis._current_sort_column    = column;\n\t\t\t\tthis._current_sort_direction = direction;\n\n\t\t\t\treverse_direction = true;\n\t\t\t}\n\t\t}\n\n\t\t// Reverse the current sort order\n\t\tif (reverse_direction) {\n\t\t\tthis._rows.reverse();\n\n\t\t\t// Update row position tracking for future sorts to allow multi-column\n\t\t\t// sorting\n\t\t\tthis.indexRows();\n\n\t\t// Continue defining sort logic and execute\n\t\t} else {\n\n\t\t\t// Optional function to transform values before comparison, I.E stripping\n\t\t\t// out HTML or typecasting values\n\t\t\tif ('function' !== typeof transformer) {\n\t\t\t\ttransformer = undefined;\n\t\t\t}\n\n\t\t\t// Default comparison engine\n\t\t\tif ('function' !== typeof comparator) {\n\t\t\t\tcomparator = function(a, b) {\n\t\t\t\t\tvar ret_val;\n\n\t\t\t\t\tif (undefined === a || null === a) {ret_val = -1;}\n\t\t\t\t\telse if (undefined === b || null === b) {ret_val = 1;}\n\t\t\t\t\telse if (a < b) {ret_val = -1;}\n\t\t\t\t\telse if (a > b) {ret_val = 1;}\n\t\t\t\t\telse {ret_val = 0;}\n\n\t\t\t\t\treturn ret_val;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If a schema definition exists, look for sort options\n\t\t\tif ((this.getSchema() instanceof global.DatatableJs.lib.Schema)) {\n\t\t\t\tif ((this.getSchema().getColumn(column) instanceof global.DatatableJs.lib.Column)) {\n\n\t\t\t\t\tif ('function' === typeof this.getSchema().getColumn(column).get('sort_transformer')) {\n\t\t\t\t\t\ttransformer = this.getSchema().getColumn(column).get('sort_transformer');\n\t\t\t\t\t}\n\n\t\t\t\t\tif ('function' === typeof this.getSchema().getColumn(column).get('sort_comparator')) {\n\t\t\t\t\t\tcomparator = this.getSchema().getColumn(column).get('sort_comparator');\n\t\t\t\t\t}\n\n\t\t\t\t\t// If a direction isn't yet defined, see if a default sort order is\n\t\t\t\t\t// specified in the column schema\n\t\t\t\t\tif ('string' !== typeof direction) {\n\t\t\t\t\t\tif (this.getSchema().getColumn(column).get('sort_direction')) {\n\t\t\t\t\t\t\tdirection = ('desc' === this.getSchema().getColumn(column).get('sort_direction')\n\t\t\t\t\t\t\t\t? 'desc'\n\t\t\t\t\t\t\t\t: 'asc'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If a direction still isn't defined, default to ascending\n\t\t\tif ('string' !== typeof direction) {\n\t\t\t\tdirection = 'asc';\n\t\t\t}\n\n\t\t\t// Sort the data set\n\t\t\tthis._rows.sort(function(a, b) {\n\t\t\t\tvar ret_val = 0;\n\t\t\t\tvar a_val = a[column];\n\t\t\t\tvar b_val = b[column];\n\n\t\t\t\t// Perform any specified pre-comparison transformations\n\t\t\t\tif (undefined !== transformer) {\n\t\t\t\t\ta_val = transformer(a_val);\n\t\t\t\t\tb_val = transformer(b_val);\n\t\t\t\t}\n\n\t\t\t\t// Sort rows missing data to the \"bottom\"\n\t\t\t\tif ((undefined === a_val || null === a_val || '' === a_val) && a_val !== b_val) {\n\t\t\t\t\tret_val = 1;\n\n\t\t\t\t} else if ((undefined === b_val || null === b_val || '' === b_val) && a_val !== b_val) {\n\t\t\t\t\tret_val = -1;\n\n\t\t\t\t// Maintain relative position when values are equal to allow\n\t\t\t\t// multi-column sorting\n\t\t\t\t} else if (a_val === b_val) {\n\t\t\t\t\tif ('asc' === direction) {\n\t\t\t\t\t\tret_val = a.__pos__ - b.__pos__;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tret_val = b.__pos__ - a.__pos__;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tret_val = comparator(a_val, b_val);\n\t\t\t\t}\n\t\t\t\treturn ret_val;\n\t\t\t});\n\n\t\t\tif ('desc' === direction) {\n\t\t\t\tthis._rows.reverse();\n\t\t\t}\n\n\t\t\t// Update row position tracking for future sorts to allow multi-column\n\t\t\t// sorting\n\t\t\tthis.indexRows();\n\n\t\t\t// Update local metadata\n\t\t\tthis._current_sort_column    = column;\n\t\t\tthis._current_sort_direction = direction;\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t// Update row position tracking for future sorts to allow multi-column\n\t// sorting\n\tData.prototype.indexRows = function() {\n\t\tfor (var a = 0; a < this._rows.length; a++) {\n\t\t\tthis._rows[a].__pos__ = a;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Empty the data set\n\t *\n\t * @return {DatatableJs.lib.Data}\n\t */\n\tData.prototype.truncate = function() {\n\t\tthis._current_sort_column    = undefined;\n\t\tthis._current_sort_direction = undefined;\n\t\tthis._rows = [];\n\t\treturn this;\n\t};\n\n\t/**\n\t * Define the length property for the Iterator object\n\t */\n\tObject.defineProperty(Data.prototype, 'length', {\n\t\tset: function() {\n\t\t\tthrow new global.DatatableJs.lib.Exception('Cannot redefine property: length');\n\t\t}\n\t\t, get: function() {\n\t\t\treturn this._rows.length;\n\t\t}\n\t});\n\n\t/**\n\t * Get/Set a flag noting whether this is a shadow instance\n\t *\n\t * @param\n\t * @return {DatatableJs.lib.Iterator}\n\t */\n\tData.prototype.isShadow = function(bool) {\n\t\tvar ret_val;\n\t\tif ('undefined' !== typeof bool) {\n\t\t\tthis._is_shadow = Boolean(bool);\n\t\t\tret_val = this;\n\t\t} else {\n\t\t\tret_val = this._is_shadow;\n\t\t}\n\t\treturn ret_val;\n\t};\n\n\tglobal.DatatableJs.lib.Data = Data;\n\n}(this);\n\n\n/**\n * Iterator class for the DatatableJs library\n * References a DatatableJs instance\n */\n+function(global, undefined) {\n\t'use strict';\n\n\n\tvar _PAGINATION_DEFAULTS = {\n\t\t  enabled:       false\n\t\t, rows_per_page: 25\n\t\t, current_page:  1\n\t};\n\n\t/**\n\t * Iterator constructor\n\t *\n\t * @param {DatatableJs.lib.Data} data Optional, an instance of DatatableJs.lib.Data\n\t * @param {DatatableJs.lib.Schema} schema Optional, an instance of DatatableJs.lib.Schema\n\t */\n\tvar Iterator = function(datatable_instance) {\n\n\t\tif (!(datatable_instance instanceof global.DatatableJs)) {throw new global.DatatableJs.lib.Exception('Iterator constructor requres a DatatableJs reference');}\n\n\t\tthis.datatable_instance = datatable_instance;\n\n\t\tthis.shadow_instance = new global.DatatableJs();\n\t\tthis.shadow_instance.setSchema(this.datatable_instance.getSchema());\n\t\tthis.shadow_instance.isShadow(true);\n\n\t\tthis.shadow_index = [];\n\n\t\t/**\n\t\t * Reference to the last matched row\n\t\t * @private\n\t\t * @type {Object}\n\t\t */\n\t\tthis._cur_value = undefined;\n\n\t\t/**\n\t\t * An array of Object instances defining filters\n\t\t * @private\n\t\t * @type {Array} An array of simple objects that are combined to create a filter rule:\n\t\t *       {\n\t\t *           fields: []        // One or more valid schema fields\n\t\t *           , comparators: [] // One or more comparison functions.  May be any of:\n\t\t *               - '>'\n\t\t *               - '>='\n\t\t *               - '<'\n\t\t *               - '<='\n\t\t *               - '=='\n\t\t *               - '==='\n\t\t *               - '!='\n\t\t *               - '!=='\n\t\t *               - function(a, b) {} // A custom comparison function that compares two values for\n\t\t *                                   // a match, return bool\n\t\t *           , values: []      // One or more values to match against\n\t\t *       }\n\t\t */\n\t\tthis._filters = [];\n\n\t\t/**\n\t\t * [_is_executed description]\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._is_executed = false;\n\n\t\t/**\n\t\t * [_is_filtered description]\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._is_filtered = false;\n\n\t\t/**\n\t\t * [_is_sorted description]\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._is_sorted = false;\n\n\t\t/**\n\t\t * Stack pointer and current value for the data set referenced by _data\n\t\t * @private\n\t\t * @type {Number}\n\t\t */\n\t\tthis._iterator_key   = -1;\n\n\t\t/**\n\t\t * Reference to the data identified by _iterator_key\n\t\t * @private\n\t\t * @type {Object}\n\t\t */\n\t\tthis._iterator_value = undefined;\n\n\t\t/**\n\t\t * [_pagination description]\n\t\t * @private\n\t\t * @type {[type]}\n\t\t */\n\t\tthis._pagination = {\n\t\t\t  enabled:       _PAGINATION_DEFAULTS.enabled\n\t\t\t, rows_per_page: _PAGINATION_DEFAULTS.rows_per_page\n\t\t\t, current_page:  _PAGINATION_DEFAULTS.current_page\n\t\t};\n\n\t\t/**\n\t\t * A DatatableJs.lib.Schema instance\n\t\t * @private\n\t\t * @type {DatatableJs.lib.Schema}\n\t\t */\n\t\tthis._schema = undefined;\n\n\t\t/**\n\t\t * An array of Object instances defining sorting rules\n\t\t * @private\n\t\t * @type {Array} An array of simple objects that are combined to create a sort order:\n\t\t *     {\n\t\t *           column:      ''                  The name of the column to sort by\n\t\t *         , direction:   'asc'               Optional, the sort order, either 'asc' or 'desc'\n\t\t *         , comparator:  function(a, b, dir) Optional, a custom sort method.  This method\n\t\t *                                            is passed two values and a sort direction string\n\t\t *         , transformer: function(a)         Optional, a custom function used to perform\n\t\t *                                            pre-comparison transformations\n\t\t *     }\n\t\t */\n\t\tthis._sorts = [];\n\t};\n\n\t/**\n\t * Get the current DatatableJs.lib.Data instance\n\t *\n\t * If an instance doesn't exist or is invalid one will be created\n\t *\n\t * @return {DatatableJs.lib.Data}\n\t */\n\tIterator.prototype.getData = function() {\n\t\tthis.applyFilterRules();\n\t\treturn this.shadow_instance.getData();\n\t};\n\n\t/**\n\t * Get the current set of data rows\n\t *\n\t * @return {Array}\n\t */\n\tIterator.prototype.getRows = function() {\n\t\tthis.applyFilterRules();\n\t\treturn this.shadow_instance.getRows();\n\t};\n\n\t/**\n\t * Get the current DatatableJs.lib.Schema instance\n\t *\n\t * If an instance doesn't exist or is invalid one will be created\n\t *\n\t * @return {DatatableJs.lib.Schema}\n\t */\n\tIterator.prototype.getSchema = function() {\n\t\treturn this.datatable_instance.getSchema();\n\t};\n\n\t/**\n\t * Add a filter rule\n\t *\n\t * {\n\t *     fields:        [array of column names]\n\t *     , comparators: [array of comparison control characters or functions]\n\t *     , values:      [array of values to compare with]\n\t * }\n\t *\n\t * @param  {Object}                 filter\n\t * @return {DatatableJs.lib.Filter}\n\t */\n\tIterator.prototype.addFilterRule = function(filter) {\n\n\t\t// Filter rules\n\t\tif (filter && filter.fields && filter.comparators && filter.values) {\n\t\t\tif (!(filter.fields instanceof Array))      {filter.fields = [filter.fields];}\n\t\t\tif (!(filter.comparators instanceof Array)) {filter.comparators = [filter.comparators];}\n\t\t\tif (!(filter.values instanceof Array))      {filter.values = [filter.values];}\n\n\t\t\tthis._filters.push({\n\t\t\t\t  fields:      filter.fields\n\t\t\t\t, comparators: filter.comparators\n\t\t\t\t, values:      filter.values\n\t\t\t});\n\t\t\tthis._is_filtered = false;\n\n\t\t// Rule rejected\n\t\t} else {\n\t\t\tthrow new global.DatatableJs.lib.Exception('An invalid filter definition was rejected', filter);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Clear out all defined filters\n\t *\n\t * Also re-executes this iterator\n\t *\n\t * @return {[type]} [description]\n\t */\n\tIterator.prototype.clearFilterRules = function() {\n\t\tthis._filters = [];\n\t\tthis._is_filtered = false;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Set all filter rules at once.\n\t *\n\t * Requires an array of valid filter rule objects\n\t *\n\t * @param {Array} filter_rules\n\t */\n\tIterator.prototype.setFilterRules = function(filter_rules) {\n\t\tif (!(filter_rules instanceof Array)) {throw new global.DatatableJs.lib.Exception('Filter rules must be an array of valid rule definition objects');}\n\n\t\tthis.clearFilterRules();\n\t\tfor (var a = 0; a < filter_rules.length; a++) {\n\t\t\tthis.addFilterRule(filter_rules[a]);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the current set of filter rules\n\t *\n\t * @return {Array}\n\t */\n\tIterator.prototype.getFilterRules = function() {\n\t\treturn this._filters;\n\t};\n\n\t/**\n\t * Add a sorting rule.  Supports a stable multi-sort.\n\t * Resets the executed flag to false...\n\t * @param  {Object}                 sort\n\t * @return {DatatableJs.lib.Iterator}\n\t */\n\tIterator.prototype.addSortRule = function(sort) {\n\n\t\t// Sort rules\n\t\tif (sort && sort.column && sort.column+'') { // Only column is required\n\t\t\tthis._sorts.push({\n\t\t\t\t  column:      sort.column+''\n\t\t\t\t, direction:   (sort.direction ? sort.direction : undefined)\n\t\t\t\t, comparator:  (sort.comparator ? sort.comparator : undefined)\n\t\t\t\t, transformer: (sort.transformer ? sort.transformer : undefined)\n\t\t\t});\n\t\t\tthis._is_sorted = false;\n\n\t\t// Rule rejected\n\t\t} else {\n\t\t\tthrow new global.DatatableJs.lib.Exception('An invalid sort definition was rejected', sort);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Clear all sort rules\n\t *\n\t * @param  {Array}                   sort\n\t * @return {DatatableJs.lib.Iterator}\n\t */\n\tIterator.prototype.clearSortRules = function() {\n\t\tthis._sorts = [];\n\t\tthis._is_sorted = false;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the current set of sorting rules\n\t *\n\t * @param  {Array}                   sort\n\t * @return {DatatableJs.lib.Iterator}\n\t */\n\tIterator.prototype.getSortRules = function() {\n\t\treturn this._sorts;\n\t};\n\n\t/**\n\t * Set all sort rules at once\n\t *\n\t * @param  {Array}                   sort\n\t * @return {DatatableJs.lib.Iterator}\n\t */\n\tIterator.prototype.setSortRules = function(sort_rules) {\n\t\tif (!(sort_rules instanceof Array)) {throw new global.DatatableJs.lib.Exception('Sort rules must be an array of valid rule definition objects');}\n\n\t\tthis.clearSortRules();\n\t\tfor (var a = 0; a < sort_rules.length; a++) {\n\t\t\tthis.addSortRule(sort_rules[a]);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Set a pagination rule for this iterator\n\t *\n\t * Pagination rules are taken into account when calling the next() and prev()\n\t * methods. Page counts only include rows that match all current filter rules.\n\t *\n\t * @param {Object} pagination An object containing pagination rules.  Options are:\n\t *     enabled       - True or false\n\t *     rows_per_page - Number of data rows to display per page\n\t *     current_page  - Set the current page index, default 1\n\t */\n\tIterator.prototype.setPaginationRule = function(pagination) {\n\t\tif (\n\t\t\tundefined === pagination\n\t\t\t|| (\n\t\t\t\tundefined === pagination.enabled\n\t\t\t\t&& undefined === pagination.rows_per_page\n\t\t\t\t&& undefined === pagination.current_page\n\t\t\t)\n\t\t) {\n\t\t\tthrow new global.DatatableJs.lib.Exception('An invalid pagination rule was rejected', pagination);\n\t\t}\n\n\t\t// Merge with current or default values\n\t\tif (!pagination.enabled) {\n\t\t\tpagination.enabled = (this._pagination.enabled ? this._pagination.enabled : _PAGINATION_DEFAULTS.enabled);\n\t\t}\n\t\tif (!pagination.rows_per_page) {\n\t\t\tpagination.rows_per_page = (this._pagination.rows_per_page ? this._pagination.rows_per_page : _PAGINATION_DEFAULTS.rows_per_page);\n\t\t}\n\t\tif (!pagination.current_page) {\n\t\t\tpagination.current_page  = (this._pagination.current_page ? this._pagination.current_page : _PAGINATION_DEFAULTS.current_page);\n\t\t}\n\n\t\t// Typecast/typecheck\n\t\tpagination.enabled       = (true === pagination.enabled);\n\t\tpagination.rows_per_page = Math.round(Number(pagination.rows_per_page));\n\t\tpagination.current_page  = Math.round(Number(pagination.current_page));\n\n\t\tthis._pagination.enabled       = pagination.enabled;\n\t\tthis._pagination.rows_per_page = pagination.rows_per_page;\n\t\tthis._pagination.current_page  = pagination.current_page;\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the current page value\n\t * @return {Number}\n\t */\n\tIterator.prototype.getPage = function() {\n\t\treturn Number(this._pagination.current_page);\n\t};\n\n\t/**\n\t * Set the current page value\n\t *\n\t * @param  {Number}\n\t * @return {DatatableJs.lib.Iterator}\n\t */\n\tIterator.prototype.setPage = function(page) {\n\t\tif (!page) {throw new global.DatatableJs.lib.Exception('Invalid page number \"'+page+'\"');}\n\t\tthis._pagination.current_page = Math.round(Number(page));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the current number of rows per page\n\t *\n\t * @return {Number}\n\t */\n\tIterator.prototype.getRowsPerPage = function() {\n\t\treturn this._pagination.rows_per_page;\n\t};\n\n\t/**\n\t * Set the numer of rows per page\n\t *\n\t * Always sets the current page to 1\n\t *\n\t * @param  {Number} rows\n\t * @return {DatatableJs.lib.Iterator}\n\t */\n\tIterator.prototype.setRowsPerPage = function(rows) {\n\t\tif (!rows) {throw new global.DatatableJs.lib.Exception('Invalid page size \"'+rows+'\"');}\n\t\tthis._pagination.rows_per_page = Math.round(Number(rows));\n\t\tthis._pagination.current_page = 1;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the current enablement flag for pagination limiters\n\t *\n\t * @param {Boolean}\n\t */\n\tIterator.prototype.getPaginationEnabled = function() {\n\t\treturn (this._pagination.enabled === true);\n\t};\n\n\t/**\n\t * Enable or disable pagination limiters\n\t * @param  {Boolean} enabled\n\t * @return {DatatableJs.lib.Iterator}\n\t */\n\tIterator.prototype.setPaginationEnabled = function(enabled) {\n\t\tthis._pagination.enabled = (true === enabled);\n\t\treturn this;\n\t};\n\n\t/**\n\t * \"execute\" an iterator\n\t *\n\t * Resets iterator position and related values, and executes all sort rules\n\t * on initial execution. The current pagination position can be passed as an\n\t * argument\n\t *\n\t * @param  {Object}     options     Initialization options, currently only supports\n\t *                                  a 'page' option for pagination.  If included,\n\t *                                  pagination is automatically enabled and rows\n\t *                                  returned by next() are limited to those in the\n\t *                                  specified page.\n\t * @return {DatatableJs.lib.Iterator}\n\t */\n\tIterator.prototype.execute = function(options) {\n\n\t\t// Set the current page\n\t\tif (options && options.page) {\n\t\t\tthis.setPaginationEnabled(true);\n\t\t\tthis.setPage(Number(options.page));\n\t\t}\n\n\t\tthis._iterator_key   = this.getMinRow() - 1;\n\t\tthis._iterator_value = undefined;\n\n\t\t// Shadow-copy the filtered data\n\t\tthis.applyFilterRules();\n\n\t\t// Perform any defined sort rules in order on the shadow copy.\n\t\t// This allows multi-sort operations.  Only do this once unless the sort\n\t\t// rules change\n\t\tthis.applySortRules();\n\n\t\tthis._is_executed = true;\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Shadow-copy the filtered data\n\t * @return {[type]} [description]\n\t */\n\tIterator.prototype.applyFilterRules = function() {\n\t\tif (!this._is_filtered) {\n\t\t\tthis.shadow_instance.getData().truncate();\n\t\t\tthis.shadow_index = [];\n\t\t\tfor (var a = 0; a < this.datatable_instance.getRows().length; a++) {\n\t\t\t\tif (\n\t\t\t\t\tthis.datatable_instance.getRows()[a]\n\t\t\t\t\t&& this.rowMatches(this.datatable_instance.getRows()[a])\n\t\t\t\t) {\n\t\t\t\t\tthis.shadow_instance.addRow(this.datatable_instance.getRows()[a]);\n\t\t\t\t\tthis.shadow_index.push(this.datatable_instance.getRows()[a].__pos__);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._is_filtered = true;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Perform any defined sort rules in order, this allows multi-sort\n\t * operations.\n\t * @return {[type]} [description]\n\t */\n\tIterator.prototype.applySortRules = function() {\n\t\tif (!this._is_sorted) {\n\t\t\tif (0 < this._sorts.length) {\n\t\t\t\tfor (var a = 0; a < this._sorts.length; a++) {\n\t\t\t\t\tthis.datatable_instance.getData().sort(\n\t\t\t\t\t\t  this._sorts[a].column\n\t\t\t\t\t\t, this._sorts[a].direction\n\t\t\t\t\t\t, this._sorts[a].comparator\n\t\t\t\t\t\t, this._sorts[a].transformer\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.shadow_instance.getData().sort('__pos__', 'asc');\n\n\t\t\tthis._is_sorted = true;\n\t\t}\n\t\treturn this;\n\t};\n\n\tIterator.prototype.sort = function() {\n\t\tif (!this._is_sorted) {\n\t\t\tthis.applySortRules();\n\t\t} else {\n\t\t\tthis.datatable_instance.getData().sort();\n\t\t\tthis.shadow_instance.getData().sort();\n\t\t}\n\t\treturn this;\n\t};\n\n\tIterator.prototype.getMinRow = function() {\n\t\tvar min_page_row = 0;\n\t\tif (this._pagination.enabled) {\n\t\t\tmin_page_row = (this._pagination.current_page * this._pagination.rows_per_page) - this._pagination.rows_per_page;\n\t\t}\n\t\treturn min_page_row;\n\t};\n\n\tIterator.prototype.getMaxRow = function() {\n\t\tvar max_page_row = this.getRows().length;\n\t\tif (this._pagination.enabled) {\n\t\t\tmax_page_row = (this._pagination.current_page * this._pagination.rows_per_page) - 1;\n\t\t}\n\t\treturn max_page_row;\n\t};\n\n\t/**\n\t * Return the next matching row of data and increment the iterator accordingly\n\t *\n\t * Takes pagination rules into account and only iterates through the current\n\t * page number if enabled.  Page counts only include rows that match all current\n\t * filter rules.\n\t *\n\t * @return {Object} A data row, else undefined\n\t */\n\tIterator.prototype.next = function() {\n\n\t\tif (!this._is_executed) {this.execute();}\n\t\tif (this._iterator_key <= this.getMaxRow()) {this._iterator_key++;}\n\t\tthis._iterator_value = undefined;\n\n\t\tif (\n\t\t\tthis._iterator_key >= this.getMinRow()\n\t\t\t&& this._iterator_key <= this.getMaxRow()\n\t\t\t&& this.getRows()[this._iterator_key]\n\t\t) {\n\t\t\tthis._iterator_value = this.getRows()[this._iterator_key];\n\t\t}\n\n\t\treturn this._iterator_value;\n\t};\n\n\t/**\n\t * Return the last data row matched by this iterator since the last execute() call\n\t *\n\t * @return {Object} A data row, else undefined\n\t */\n\tIterator.prototype.curr = function() {\n\t\tif (!this._is_executed) {throw new global.DatatableJs.lib.Exception('Iterators must be executed before they can be iterated');}\n\t\treturn this._iterator_value;\n\t};\n\n\t/**\n\t * Return the previous matching row of data and decrement the iterator accordingly\n\t *\n\t * Takes pagination rules into account and only iterates through the current page number\n\t * if enabled\n\t *\n\t * @return {Object} A data row, else undefined\n\t */\n\tIterator.prototype.prev = function() {\n\n\t\tif (this._iterator_key >= this.getMinRow()) {this._iterator_key--;}\n\t\tif (!this._is_executed) {throw new global.DatatableJs.lib.Exception('Iterators must be executed before they can be iterated');}\n\t\tthis._iterator_value = undefined;\n\n\t\tif (\n\t\t\tthis._iterator_key >= this.getMinRow()\n\t\t\t&& this._iterator_key <= this.getMaxRow()\n\t\t\t&& this.getRows()[this._iterator_key]\n\t\t) {\n\t\t\tthis._iterator_value = this.getRows()[this._iterator_key];\n\t\t}\n\n\t\treturn this._iterator_value;\n\t};\n\n\t/**\n\t * Delete the current row from the dataset\n\t *\n\t * @todo This might break other iterators created on the same datatable... keep an eye on that\n\t * @return {DatatableJs.lib.Iterator}\n\t */\n\tIterator.prototype.remove = function() {\n\t\tthis.datatable_instance.getRows().splice(this.shadow_index[this._iterator_key], 1);\n\t\tthis.getRows().splice(this._iterator_key, 1);\n\t\tthis.shadow_index.splice(this._iterator_key, 1);\n\t\twhile (this._iterator_key > this.getRows().length) {this._iterator_key--;}\n\n\t\tthis.datatable_instance.getData().indexRows();\n\t\tthis._iterator_value = this.getRows()[this._iterator_key];\n\t\tthis._cur_value      = this.getRows()[this._iterator_key];\n\t\treturn this;\n\t};\n\n\t/**\n\t * Test to see if a row matches this filter definition\n\t *\n\t * The logic gives an AND match between filters and an OR match within filters\n\t * that specify multiple fields, comparators or values\n\t *\n\t * @param  {Object} row A single row of data\n\t * @return {bool}       True of the row matches ALL of the defined filters\n\t */\n\tIterator.prototype.rowMatches = function(row) {\n\n\t\t// AND matching between filters\n\t\tvar ret_val = true;\n\n\t\tfor (var a = 0; a < this._filters.length; a++) {\n\n\t\t\t// OR matching within a single filter using multiple fields, comparators or values\n\t\t\tvar filter_matches = false;\n\t\t\tvar filter = this._filters[a];\n\n\t\t\tif (!(filter.fields      instanceof Array)) {filter.fields      = [filter.fields];}\n\t\t\tif (!(filter.comparators instanceof Array)) {filter.comparators = [filter.comparators];}\n\t\t\tif (!(filter.values      instanceof Array)) {filter.values      = [filter.values];}\n\n\t\t\tfor (var b = 0; b < filter.fields.length; b++) {\n\n\t\t\t\tvar field_name = filter.fields[b];\n\n\t\t\t\tif (undefined === row[field_name]) {\n\t\t\t\t\tfilter_matches = false;\n\n\t\t\t\t} else {\n\t\t\t\t\tfilter_matches = this._compare(row[field_name], filter.comparators, filter.values);\n\t\t\t\t}\n\t\t\t\tif (filter_matches) {break;}\n\t\t\t}\n\t\t\tret_val = filter_matches;\n\t\t\tif (!ret_val) {break;}\n\t\t}\n\n\t\treturn ret_val;\n\t};\n\n\t/**\n\t * Compare a single field against a filter's set of comparators and values\n\t *\n\t * @param  {mixed} data        The field data to compare\n\t * @param  {Array} comparators An array of comparators to use for matching\n\t * @param  {Array} values      An array of values to compare against data\n\t * @return {bool}              True if data matches any combination of comparators and values, else false\n\t */\n\tIterator.prototype._compare = function(data, comparators, values) {\n\t\tvar ret_val = false;\n\t\tfor (var a = 0; a < comparators.length; a++) {\n\t\t\tfor (var b = 0; b < values.length; b++) {\n\n\t\t\t\tif ('function' === typeof comparators[a]) {\n\t\t\t\t\tret_val = comparators[a](data, values[b]);\n\n\t\t\t\t} else {\n\t\t\t\t\tswitch (comparators[a]) {\n\t\t\t\t\t\tcase '>':   ret_val = (data >   values[b]); break;\n\t\t\t\t\t\tcase '>=':  ret_val = (data >=  values[b]); break;\n\t\t\t\t\t\tcase '<':   ret_val = (data <   values[b]); break;\n\t\t\t\t\t\tcase '<=':  ret_val = (data <=  values[b]); break;\n\t\t\t\t\t\tcase '==':  ret_val = (data ==  values[b]); break;\n\t\t\t\t\t\tcase '===': ret_val = (data === values[b]); break;\n\t\t\t\t\t\tcase '!=':  ret_val = (data !=  values[b]); break;\n\t\t\t\t\t\tcase '!==': ret_val = (data !== values[b]); break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (ret_val) {break;}\n\t\t\t}\n\t\t\tif (ret_val) {break;}\n\t\t}\n\t\treturn ret_val;\n\t};\n\n\tIterator.prototype.reset = function() {\n\t\tthis\n\t\t\t.clearFilterRules()\n\t\t\t.clearSortRules()\n\t\t\t.execute();\n\t\tthis._is_executed = false;\n\t};\n\n\tIterator.prototype.where = function(fields, comparators, values) {\n\t\treturn this.addFilterRule({\n\t\t\tfields: fields\n\t\t\t, comparators: comparators\n\t\t\t, values: values\n\t\t});\n\t};\n\n\tIterator.prototype.and = function(fields, comparators, values) {\n\t\treturn this.where(fields, comparators, values);\n\t};\n\n\tIterator.prototype.orderBy = function(column, direction, comparator, transformer) {\n\t\treturn this.addSortRule({\n\t\t\tcolumn: column\n\t\t\t, direction: direction\n\t\t\t, comparator: comparator\n\t\t\t, transformer: transformer\n\t\t});\n\t};\n\n\t/**\n\t * Define the length property for the Iterator object\n\t */\n\tObject.defineProperty(Iterator.prototype, 'length', {\n\t\tset: function() {\n\t\t\tthrow new global.DatatableJs.lib.Exception('Cannot redefine property: length');\n\t\t}\n\t\t, get: function() {\n\t\t\tthis.applyFilterRules();\n\t\t\treturn this.shadow_instance.getRows().length;\n\t\t}\n\t});\n\n\t/**\n\t * Download the data as a CSV or Tab-delimited text file\n\t * A schema is required for exports in order to ensure proper column order.\n\t * Also, in order to support automatic parsing of the data by Excel, for CSV\n\t * exports commas in a data column are replaced with a semi-colon and tab\n\t * characters are replaced with the string '\\t'.\n\t * @param  {String}   as       The file export format, accepts 'tdt', 'tsv' and\n\t *                             'txt' for tab-delmited and 'csv' for comma-separated.\n\t *                             This is also the default file extension.\n\t * @param  {String}   filename The default file name, excluding the file extension\n\t * @return {DatatableJs.lib.Iterator}\n\t */\n\tIterator.prototype['export'] = function(as, filename) {\n\t\tvar self = this;\n\t\tvar separator;\n\t\tvar data = [];\n\t\tvar row = [];\n\t\tvar a;\n\t\tvar b;\n\t\tvar data_rows = self.applyFilterRules().getRows();\n\t\tvar cell_data;\n\t\tvar file_data = [];\n\t\tvar file_blob;\n\t\tvar file_url;\n\t\tvar file_link;\n\t\tvar mime_type;\n\n\t\tvar columns = this.datatable_instance.getSchema().getColumns();\n\t\tif (!Object.keys(columns).length) {\n\t\t\tthrow new global.DatatableJs.lib.Exception('A data schema is required for exports');\n\t\t}\n\n\t\tif (!filename) {\n\t\t\tfilename = 'export';\n\t\t}\n\n\t\tswitch (String(as).toLowerCase()) {\n\t\t\tdefault:\n\t\t\tcase 'csv':\n\t\t\t\tas = 'csv';\n\t\t\t\tseparator = ',';\n\t\t\t\tmime_type = 'text/csv';\n\t\t\tbreak;\n\n\t\t\tcase 'tdt':\n\t\t\tcase 'tsv':\n\t\t\tcase 'txt':\n\t\t\t\t// jscs:disable validateQuoteMarks\n\t\t\t\tseparator = \"\\t\";\n\t\t\t\t// jscs:enable\n\t\t\t\tmime_type = 'text/tab-separated-values';\n\t\t\tbreak;\n\t\t}\n\n\t\tfor (a in columns) if (columns.hasOwnProperty(a)) {\n\t\t\trow.push(a);\n\t\t}\n\t\tdata.push(row);\n\n\t\tfor (a = 0; a < data_rows.length; a++) {\n\t\t\trow = [];\n\t\t\tfor (b in columns) if (columns.hasOwnProperty(b)) {\n\t\t\t\tif (data_rows[a][b] instanceof Array) {\n\t\t\t\t\tcell_data = data_rows[a][b].join(',');\n\n\t\t\t\t} else if (data_rows[a][b] && data_rows[a][b].prototype && Object === data_rows[a][b].prototype) {\n\t\t\t\t\tcell_data = global.JSON.stringify(data_rows[a][b]);\n\n\t\t\t\t} else {\n\t\t\t\t\tcell_data = data_rows[a][b];\n\t\t\t\t}\n\n\t\t\t\tif (cell_data) {\n\t\t\t\t\tif ('csv' === as) {\n\t\t\t\t\t\tcell_data = String(cell_data).replace(/,/g, ';');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcell_data = String(cell_data).replace(/\\t/g, '\\t');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trow.push(cell_data);\n\t\t\t}\n\t\t\tdata.push(row);\n\t\t}\n\n\t\tfor (a = 0; a < data.length; a++) {\n\t\t\tfile_data.push('\"'+data[a].join('\"'+separator+'\"')+'\"');\n\t\t}\n\n\t\tfile_blob = new Blob(\n\t\t\t[\n\t\t\t\t// jscs:disable validateQuoteMarks\n\t\t\t\tfile_data.join(\"\\n\")\n\t\t\t\t// jscs:enable\n\t\t\t]\n\t\t\t, {\n\t\t\t\ttype: mime_type\n\t\t\t}\n\t\t);\n\n\t\tfile_url = window.URL.createObjectURL(file_blob);\n\t\tfile_link = document.createElement('a');\n\n\t\tfile_link.href = file_url;\n\t\tfile_link.setAttribute('download', filename+'.'+as);\n\n\t\t// Append link because FireFox...\n\t\tdocument.body.appendChild(file_link);\n\t\tfile_link.click();\n\t\tdocument.body.removeChild(file_link);\n\n\t\treturn self;\n\t};\n\n\tglobal.DatatableJs.lib.Iterator = Iterator;\n\n}(this);\n"],"sourceRoot":"/source/"}